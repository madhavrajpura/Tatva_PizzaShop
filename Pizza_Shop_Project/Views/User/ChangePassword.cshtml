@model DAL.ViewModels.ChangePasswordViewModel;

@{
    ViewData["Title"] = "Change_Password";
    Layout = "_Layout";
}

<div class="user-list-main-div bg-light d-md-flex justify-content-between">
    <!-- user txt -->

    <div class="user-text fs-3 mt-4 fw-bold ms-3">Change Password </div>

</div>

@* <div class="mt-3 fs-1 fw-bold ms-3">Change Password</div> *@

<div class="pt-4" style="padding: 20%;">
    <form asp-action="ChangePassword" method="post" class="m-3">
        <p class="mt-3">Enter a new password to update your account credentials</p>
        <div class="form-group mt-3">
            <input asp-for="CurrentPassword" type="password" class="form-control d-inline input-fields mb-2 p-2"
                id="currentPassword" placeholder="Current Password*">
            <i class="bi bi-eye-slash-fill change-pass-icon-1" id="togglecurrentPassword"></i>
            <span asp-validation-for="CurrentPassword" class="validate text-danger mt-2 fs-6"></span>
        </div>
        <div class="form-group mt-3">
            <input asp-for="NewPassword" type="password" class="form-control d-inline input-fields mb-2 p-2" id="newPassword"
                placeholder="New Password*">
            <i class="bi bi-eye-slash-fill change-pass-icon-2" id="togglenewPassword"></i>

            <span asp-validation-for="NewPassword" class="validate text-danger mt-2 fs-6"></span>

        </div>
        <div class="form-group mt-3">
            <input asp-for="NewConfirmPassword" type="password" class="form-control d-inline input-fields mb-2 p-2"
                id="confirmPassword" placeholder="Confirm New Password*">
            <i class="bi bi-eye-slash-fill change-pass-icon-3" id="togglenewconfirmPassword"></i>

            <span asp-validation-for="NewConfirmPassword" class="validate text-danger mt-2 fs-6"></span>
        </div>

        <span class="text-danger mt-3 ms-3">@ViewBag.Message</span>
        <div class="mt-3">
            <button type="submit" class="btn solid-btn">Submit</button>
            <a asp-action="Dashboard" asp-controller="User" class="btn hollow-btn">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {

@* Toaster Script  *@
    <script>
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';
            console.log("successMessage", successMessage);
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "timeOut": "2000"
            };
            if (successMessage) {
                toastr.success(successMessage);
            }
            if (errorMessage) {
                toastr.error(errorMessage);
            }
        });
    </script>
@* Toggle Current Password *@
    <script>
        const togglecurrentPassword = document.querySelector('#togglecurrentPassword');
        const currentpassword = document.querySelector('#currentPassword');

        if (togglecurrentPassword) {
            togglecurrentPassword.addEventListener('click', () => {

                const type = currentpassword
                    .getAttribute('type') === 'password' ?
                    'text' : 'password';
                currentpassword.setAttribute('type', type);
                togglecurrentPassword.classList.toggle('bi-eye-fill');
                togglecurrentPassword.classList.toggle('bi-eye-slash-fill');
            });
        }
    </script>

@* Toggle New Password *@
    <script>
        const togglenewPassword = document.querySelector('#togglenewPassword');
        const newPassword = document.querySelector('#newPassword');

        if (togglenewPassword) {
            togglenewPassword.addEventListener('click', () => {

                const type = newPassword
                    .getAttribute('type') === 'password' ?
                    'text' : 'password';
                newPassword.setAttribute('type', type);
                togglenewPassword.classList.toggle('bi-eye-fill');
                togglenewPassword.classList.toggle('bi-eye-slash-fill');
            });
        }
    </script>

@* Toggle New Confirm Password *@
    <script>
        const togglenewconfirmPassword = document.querySelector('#togglenewconfirmPassword');
        const confirmPassword = document.querySelector('#confirmPassword');

        if (togglenewconfirmPassword) {
            togglenewconfirmPassword.addEventListener('click', () => {

                const type = confirmPassword
                    .getAttribute('type') === 'password' ?
                    'text' : 'password';
                confirmPassword.setAttribute('type', type);
                togglenewconfirmPassword.classList.toggle('bi-eye-fill');
                togglenewconfirmPassword.classList.toggle('bi-eye-slash-fill');
            });
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}